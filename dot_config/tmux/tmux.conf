set-environment -gF TMUX_PLUGIN_MANAGER_PATH '#{HOME}/.local/share/tmux/plugins'

if 'test ! -d "${TMUX_PLUGIN_MANAGER_PATH}/tpm"' {
  run 'mkdir -p "${TMUX_PLUGIN_MANAGER_PATH}"'
  run 'git clone https://github.com/tmux-plugins/tpm "${TMUX_PLUGIN_MANAGER_PATH}/tpm"'
  run '${TMUX_PLUGIN_MANAGER_PATH}/tpm/bin/install_plugins'
}

set -g mouse on
bind-key    -T copy-mode    C-w               send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode    MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode    M-w               send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi C-j               send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi Enter             send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
set-window-option -g mode-keys vi
# set new panes in current directory
bind c   new-window      -c "#{pane_current_path}"
bind '"' split-window    -c "#{pane_current_path}"
bind %   split-window -h -c "#{pane_current_path}"

# Conditional setting for default-terminal
if-shell 'infocmp tmux-256color >/dev/null 2>&1' \
  'set -g default-terminal "tmux-256color"' \
  'set -g default-terminal "screen-256color"'
set-option -a terminal-features 'xterm-256color:RGB'

# Enable xterm-keys for better key handling
set -g xterm-keys on

# Enable bracketed paste mode for all terminals
set -as terminal-features '*:bpaste'

# Clipboard integration
set -s set-clipboard on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'christoomey/vim-tmux-navigator'
# prettify
# set -g @plugin 'joshmedeski/tmux-nerd-font-window-name' # interesting plugin, but needs more polish to work with window rename
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'l1ttleflyyy/tmux' # See https://github.com/catppuccin/tmux

#set -g @continuum-restore 'on'
set -g @continuum-save-interval '15'

# Configure the catppuccin plugin

# Set the flavor based on environment variable: latte, frappe, macchiato or mocha
if-shell 'test "$MY_CURRENT_THEME" = "light"' \
    'set -g @catppuccin_flavor "gruvbox"' \
    'set -g @catppuccin_flavor "macchiato"'
set -g @catppuccin_window_text                  " #W"
set -g @catppuccin_window_number                "#I"
set -g @catppuccin_window_number_position       'right'
set -g @catppuccin_window_current_text          " #W"
set -g @catppuccin_window_current_text_color    '#{E:@thm_surface_1}'
set -g @catppuccin_window_current_number        "#I"
# set -g @catppuccin_window_current_number_color  '#{E:@thm_red}'
set -g @catppuccin_window_status_style      "rounded"
# set -g @catppuccin_window_flags             "icon" # none, icon, or text

# set -g @catppuccin_status_left_separator    ""
# set -g @catppuccin_status_right_separator   " "
# set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_status_module_text_bg '#{E:@thm_mantle}'
set -g @catppuccin_status_background     'default'

set -g @catppuccin_host_text             " #h"

# Load catppuccin
run '#{TMUX_PLUGIN_MANAGER_PATH}/tmux/catppuccin.tmux'

# status bar frequency
set-option -g status-interval 1

# Make the status line pretty and add some modules
set -g status-right-length 100
set -g status-left-length 100

set -g status-left "#{E:@catppuccin_status_session} "

set -gF status-right "#{E:@catppuccin_status_my_cpu}"
set -agF status-right "#{E:@catppuccin_status_my_ram}"
set -ag status-right "#{E:@catppuccin_status_host}"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '#{TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm'
